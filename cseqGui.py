#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.18
#  in conjunction with Tcl version 8.6
#    Nov 14, 2018 06:12:06 PM CET  platform: Linux

# import sys


try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True


import cseqGui_support


w = None


def destroy_Toplevel1():
    global w
    w.destroy()
    w = None


class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#d9d9d9'  # X11 color: 'gray85'

        top.geometry("710x740+750+10")
        top.title("New Toplevel")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top, font="TkMenuFont", bg=_bgcolor, fg=_fgcolor)
        top.configure(menu=self.menubar)

        self.sub_menu = tk.Menu(top, tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu,
                                 activebackground="#d9d9d9",
                                 activeforeground="#000000",
                                 background="#d9d9d9",
                                 font="TkTextFont",
                                 foreground="#000000",
                                 label="File")
        self.sub_menu.add_command(
            activebackground="#d8d8d8",
            activeforeground="#000000",
            background="#d9d9d9",
            font="TkTextFont",
            foreground="#000000",
            label="Open")
        self.sub_menu.add_command(
            activebackground="#d8d8d8",
            activeforeground="#000000",
            background="#d9d9d9",
            font="TkTextFont",
            foreground="#000000",
            label="Exit")
        self.sub_menu1 = tk.Menu(top, tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu1,
                                 activebackground="#d9d9d9",
                                 activeforeground="#000000",
                                 background="#d9d9d9",
                                 font="TkTextFont",
                                 foreground="#000000",
                                 label="Help")
        self.sub_menu1.add_command(
            activebackground="#d8d8d8",
            activeforeground="#000000",
            background="#d9d9d9",
            font="TkTextFont",
            foreground="#000000",
            label="Info cmd")
        self.sub_menu1.add_command(
            activebackground="#d8d8d8",
            activeforeground="#000000",
            background="#d9d9d9",
            font="TkTextFont",
            foreground="#000000",
            label="List configs")
        self.sub_menu1.add_command(
            activebackground="#d8d8d8",
            activeforeground="#000000",
            background="#d9d9d9",
            font="TkTextFont",
            foreground="#000000",
            label="Setting")
        self.sub_menu1.add_command(
            activebackground="#d8d8d8",
            activeforeground="#000000",
            background="#d9d9d9",
            font="TkTextFont",
            foreground="#000000",
            label="About cseqGui")

        self.Labelframe2 = tk.LabelFrame(top)
        self.Labelframe2.place(relx=0.445, rely=0.013, relheight=0.244, relwidth=0.516)
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(text='''Module options''')
        self.Labelframe2.configure(width=330)

        self.Label2 = tk.Label(self.Labelframe2)
        self.Label2.place(relx=0.061, rely=0.189, height=21, width=74, bordermode='ignore')
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(text='''Error Label''')

        self.Entry1 = tk.Entry(self.Labelframe2)
        self.Entry1.place(relx=0.364, rely=0.162, height=23, relwidth=0.503, bordermode='ignore')
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(selectbackground="#c4c4c4")

        self.Checkbutton1 = tk.Checkbutton(self.Labelframe2)
        self.Checkbutton1.place(relx=0.03, rely=0.378, relheight=0.124, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1.configure(activebackground="#d9d9d9")
        self.Checkbutton1.configure(anchor='nw')
        self.Checkbutton1.configure(justify='left')
        self.Checkbutton1.configure(text='''Keep Static Array''')
        self.Checkbutton1.configure(variable=cseqGui_support.cb_keep_stat)

        self.Checkbutton1_6 = tk.Checkbutton(self.Labelframe2)
        self.Checkbutton1_6.place(relx=0.03, rely=0.486, relheight=0.124, relwidth=0.455, bordermode='ignore')
        self.Checkbutton1_6.configure(activebackground="#d9d9d9")
        self.Checkbutton1_6.configure(anchor='nw')
        self.Checkbutton1_6.configure(justify='left')
        self.Checkbutton1_6.configure(text='''Atomic Parameter''')
        self.Checkbutton1_6.configure(variable=cseqGui_support.cb_atom_param)

        self.Checkbutton1_1 = tk.Checkbutton(self.Labelframe2)
        self.Checkbutton1_1.place(relx=0.485, rely=0.486, relheight=0.124, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_1.configure(activebackground="#d9d9d9")
        self.Checkbutton1_1.configure(anchor='nw')
        self.Checkbutton1_1.configure(justify='left')
        self.Checkbutton1_1.configure(text='''Decompose PC''')
        self.Checkbutton1_1.configure(variable=cseqGui_support.cb_dec_pc)

        self.Checkbutton1_2 = tk.Checkbutton(self.Labelframe2)
        self.Checkbutton1_2.place(relx=0.03, rely=0.595, relheight=0.124, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_2.configure(activebackground="#d9d9d9")
        self.Checkbutton1_2.configure(anchor='nw')
        self.Checkbutton1_2.configure(justify='left')
        self.Checkbutton1_2.configure(text='''Guess CS only''')
        self.Checkbutton1_2.configure(variable=cseqGui_support.cb_guess_cs)

        self.Checkbutton1_3 = tk.Checkbutton(self.Labelframe2)
        self.Checkbutton1_3.place(relx=0.485, rely=0.595, relheight=0.124, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_3.configure(activebackground="#d9d9d9")
        self.Checkbutton1_3.configure(anchor='nw')
        self.Checkbutton1_3.configure(justify='left')
        self.Checkbutton1_3.configure(text='''SVCOMP''')
        self.Checkbutton1_3.configure(variable=cseqGui_support.cb_svcomp)

        self.Checkbutton1_7 = tk.Checkbutton(self.Labelframe2)
        self.Checkbutton1_7.place(relx=0.03, rely=0.703, relheight=0.124, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_7.configure(activebackground="#d9d9d9")
        self.Checkbutton1_7.configure(anchor='nw')
        self.Checkbutton1_7.configure(justify='left')
        self.Checkbutton1_7.configure(text='''Round Int''')
        self.Checkbutton1_7.configure(variable=cseqGui_support.cb_round_int)

        self.Checkbutton1_4 = tk.Checkbutton(self.Labelframe2)
        self.Checkbutton1_4.place(relx=0.485, rely=0.703, relheight=0.124, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_4.configure(activebackground="#d9d9d9")
        self.Checkbutton1_4.configure(anchor='nw')
        self.Checkbutton1_4.configure(justify='left')
        self.Checkbutton1_4.configure(text='''Bit pthread''')
        self.Checkbutton1_4.configure(variable=cseqGui_support.cb_bit_pthr)

        self.Checkbutton1_5 = tk.Checkbutton(self.Labelframe2)
        self.Checkbutton1_5.place(relx=0.485, rely=0.378, relheight=0.124, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_5.configure(activebackground="#d9d9d9")
        self.Checkbutton1_5.configure(anchor='nw')
        self.Checkbutton1_5.configure(justify='left')
        self.Checkbutton1_5.configure(text='''Nondet-static''')
        self.Checkbutton1_5.configure(variable=cseqGui_support.cb_nondet_stat)

        self.Checkbutton1_8 = tk.Checkbutton(self.Labelframe2)
        self.Checkbutton1_8.place(relx=0.03, rely=0.811, relheight=0.124, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_8.configure(activebackground="#d9d9d9")
        self.Checkbutton1_8.configure(anchor='nw')
        self.Checkbutton1_8.configure(justify='left')
        self.Checkbutton1_8.configure(text='''Stop on fail''')
        self.Checkbutton1_8.configure(variable=cseqGui_support.cb_stop_fail)

        self.Checkbutton1_9 = tk.Checkbutton(self.Labelframe2)
        self.Checkbutton1_9.place(relx=0.485, rely=0.811, relheight=0.124, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_9.configure(activebackground="#d9d9d9")
        self.Checkbutton1_9.configure(anchor='nw')
        self.Checkbutton1_9.configure(justify='left')
        self.Checkbutton1_9.configure(text='''Show linemap''')
        self.Checkbutton1_9.configure(variable=cseqGui_support.cb_show_linem)

        self.Labelframe3 = tk.LabelFrame(top)
        self.Labelframe3.place(relx=0.445, rely=0.264, relheight=0.191, relwidth=0.516)
        self.Labelframe3.configure(relief='groove')
        self.Labelframe3.configure(text='''Check''')
        self.Labelframe3.configure(width=330)

        self.Checkbutton1_1 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton1_1.place(relx=0.03, rely=0.207, relheight=0.159, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_1.configure(activebackground="#d9d9d9")
        self.Checkbutton1_1.configure(anchor='nw')
        self.Checkbutton1_1.configure(justify='left')
        self.Checkbutton1_1.configure(text='''Deadlock''')
        self.Checkbutton1_1.configure(variable=cseqGui_support.cb_deadlock)

        self.Checkbutton1_2 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton1_2.place(relx=0.485, rely=0.207, relheight=0.159, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_2.configure(activebackground="#d9d9d9")
        self.Checkbutton1_2.configure(anchor='nw')
        self.Checkbutton1_2.configure(justify='left')
        self.Checkbutton1_2.configure(text='''Bounds''')
        self.Checkbutton1_2.configure(variable=cseqGui_support.cb_bounds)

        self.Checkbutton1_3 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton1_3.place(relx=0.03, rely=0.345, relheight=0.159, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_3.configure(activebackground="#d9d9d9")
        self.Checkbutton1_3.configure(anchor='nw')
        self.Checkbutton1_3.configure(justify='left')
        self.Checkbutton1_3.configure(text='''Div by zero''')
        self.Checkbutton1_3.configure(variable=cseqGui_support.cb_div_zero)

        self.Checkbutton1_4 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton1_4.place(relx=0.485, rely=0.345, relheight=0.159, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_4.configure(activebackground="#d9d9d9")
        self.Checkbutton1_4.configure(anchor='nw')
        self.Checkbutton1_4.configure(justify='left')
        self.Checkbutton1_4.configure(text='''Pointer''')
        self.Checkbutton1_4.configure(variable=cseqGui_support.cb_pointer)

        self.Checkbutton1_5 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton1_5.place(relx=0.03, rely=0.483, relheight=0.159, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_5.configure(activebackground="#d9d9d9")
        self.Checkbutton1_5.configure(anchor='nw')
        self.Checkbutton1_5.configure(justify='left')
        self.Checkbutton1_5.configure(text='''Memory Leak''')
        self.Checkbutton1_5.configure(variable=cseqGui_support.cb_mem_leak)

        self.Checkbutton1_6 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton1_6.place(relx=0.03, rely=0.621, relheight=0.159, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_6.configure(activebackground="#d9d9d9")
        self.Checkbutton1_6.configure(anchor='nw')
        self.Checkbutton1_6.configure(justify='left')
        self.Checkbutton1_6.configure(text='''Signed Overflow''')
        self.Checkbutton1_6.configure(variable=cseqGui_support.cb_sign_overfl)

        self.Checkbutton1_7 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton1_7.place(relx=0.485, rely=0.621, relheight=0.159, relwidth=0.455, bordermode='ignore')
        self.Checkbutton1_7.configure(activebackground="#d9d9d9")
        self.Checkbutton1_7.configure(anchor='nw')
        self.Checkbutton1_7.configure(justify='left')
        self.Checkbutton1_7.configure(text='''Unsigned Overflow''')
        self.Checkbutton1_7.configure(variable=cseqGui_support.cb_un_overfl)

        self.Checkbutton1_9 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton1_9.place(relx=0.485, rely=0.483, relheight=0.159, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_9.configure(activebackground="#d9d9d9")
        self.Checkbutton1_9.configure(anchor='nw')
        self.Checkbutton1_9.configure(justify='left')
        self.Checkbutton1_9.configure(text='''NaN''')
        self.Checkbutton1_9.configure(variable=cseqGui_support.cb_nan)

        self.Checkbutton1_10 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton1_10.place(relx=0.485, rely=0.759, relheight=0.159, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_10.configure(activebackground="#d9d9d9")
        self.Checkbutton1_10.configure(anchor='nw')
        self.Checkbutton1_10.configure(justify='left')
        self.Checkbutton1_10.configure(text='''Overflow''')
        self.Checkbutton1_10.configure(variable=cseqGui_support.cb_overfl)

        self.Checkbutton1_10 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton1_10.place(relx=0.03, rely=0.759, relheight=0.159, relwidth=0.424, bordermode='ignore')
        self.Checkbutton1_10.configure(activebackground="#d9d9d9")
        self.Checkbutton1_10.configure(anchor='nw')
        self.Checkbutton1_10.configure(justify='left')
        self.Checkbutton1_10.configure(text='''Float Overflow''')
        self.Checkbutton1_10.configure(variable=cseqGui_support.cb_float_overfl)

        self.Labelframe4 = tk.LabelFrame(top)
        self.Labelframe4.place(relx=0.016, rely=0.185, relheight=0.27, relwidth=0.422)
        self.Labelframe4.configure(relief='groove')
        self.Labelframe4.configure(text='''Output''')
        self.Labelframe4.configure(width=270)

        self.Checkbutton2 = tk.Checkbutton(self.Labelframe4)
        #self.Checkbutton2.place(relx=0.037, rely=0.198, relheight=0.112, relwidth=0.763, bordermode='ignore')
        self.Checkbutton2.grid(row=0,column=0)
        self.Checkbutton2.configure(activebackground="#d9d9d9")
        self.Checkbutton2.configure(justify='left')
        self.Checkbutton2.configure(text='''Show Countrexample Trace (cbmc only)''')
        self.Checkbutton2.configure(variable=cseqGui_support.cb_countre_ex)

        self.Entry2 = tk.Entry(self.Labelframe4)
        self.Entry2.place(relx=0.074, rely=0.439, height=23, relwidth=0.874, bordermode='ignore')
        self.Entry2.configure(background="white")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(selectbackground="#c4c4c4")
        self.Entry2.configure(width=236)

        self.Entry2_8 = tk.Entry(self.Labelframe4)
        self.Entry2_8.place(relx=0.074, rely=0.732, height=23, relwidth=0.874, bordermode='ignore')
        self.Entry2_8.configure(background="white")
        self.Entry2_8.configure(font="TkFixedFont")
        self.Entry2_8.configure(selectbackground="#c4c4c4")
        self.Entry2_8.configure(width=236)


        self.Label3 = tk.Label(self.Labelframe4)
        self.Label3.place(relx=0.074, rely=0.317, height=21, width=108, bordermode='ignore')
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(anchor='nw')
        self.Label3.configure(text='''Countrexample:''')

        self.Label3_9 = tk.Label(self.Labelframe4)
        self.Label3_9.place(relx=0.074, rely=0.61, height=21, width=129, bordermode='ignore')
        self.Label3_9.configure(activebackground="#f9f9f9")
        self.Label3_9.configure(anchor='nw')
        self.Label3_9.configure(text='''Sequentialized file:''')

        self.Checkbutton6 = tk.Checkbutton(self.Labelframe4)
        self.Checkbutton6.grid(row=1, column=0)
        self.Checkbutton6.configure(activebackground="#d9d9d9")
        self.Checkbutton6.configure(justify='left')
        self.Checkbutton6.configure(text='''Show Visual Countrexample Trace''')
        self.Checkbutton6.configure(variable=cseqGui_support.cb_countre_ex_trace)

        self.Labelframe5 = tk.LabelFrame(top)
        self.Labelframe5.place(relx=0.016, rely=0.462, relheight=0.231, relwidth=0.422)
        self.Labelframe5.configure(relief='groove')
        self.Labelframe5.configure(text='''Backend''')
        self.Labelframe5.configure(width=270)

        self.Radiobutton1 = tk.Radiobutton(self.Labelframe5)
        self.Radiobutton1.place(relx=0.037, rely=0.286, relheight=0.131, relwidth=0.259, bordermode='ignore')
        self.Radiobutton1.configure(activebackground="#d9d9d9")
        self.Radiobutton1.configure(anchor='nw')
        self.Radiobutton1.configure(justify='left')
        self.Radiobutton1.configure(text='''CBMC''')
        self.Radiobutton1.configure(value="0")
        self.Radiobutton1.configure(variable=cseqGui_support.rb_bd_md_chk)

        self.Radiobutton1_8 = tk.Radiobutton(self.Labelframe5)
        self.Radiobutton1_8.place(relx=0.333, rely=0.286, relheight=0.131, relwidth=0.252, bordermode='ignore')
        self.Radiobutton1_8.configure(activebackground="#d9d9d9")
        self.Radiobutton1_8.configure(anchor='nw')
        self.Radiobutton1_8.configure(justify='left')
        self.Radiobutton1_8.configure(text='''blitz''')
        self.Radiobutton1_8.configure(value="1")
        self.Radiobutton1_8.configure(variable=cseqGui_support.rb_bd_md_chk)

        self.Radiobutton1_9 = tk.Radiobutton(self.Labelframe5)
        self.Radiobutton1_9.place(relx=0.63, rely=0.286, relheight=0.131, relwidth=0.289, bordermode='ignore')
        self.Radiobutton1_9.configure(activebackground="#d9d9d9")
        self.Radiobutton1_9.configure(anchor='nw')
        self.Radiobutton1_9.configure(justify='left')
        self.Radiobutton1_9.configure(text='''esbmc''')
        self.Radiobutton1_9.configure(value="2")
        self.Radiobutton1_9.configure(variable=cseqGui_support.rb_bd_md_chk)

        self.Radiobutton1_10 = tk.Radiobutton(self.Labelframe5)
        self.Radiobutton1_10.place(relx=0.037, rely=0.4, relheight=0.131, relwidth=0.252, bordermode='ignore')
        self.Radiobutton1_10.configure(activebackground="#d9d9d9")
        self.Radiobutton1_10.configure(anchor='nw')
        self.Radiobutton1_10.configure(justify='left')
        self.Radiobutton1_10.configure(text='''llbmc''')
        self.Radiobutton1_10.configure(value="3")
        self.Radiobutton1_10.configure(variable=cseqGui_support.rb_bd_md_chk)

        self.Radiobutton1_11 = tk.Radiobutton(self.Labelframe5)
        self.Radiobutton1_11.place(relx=0.333, rely=0.4, relheight=0.131, relwidth=0.289, bordermode='ignore')
        self.Radiobutton1_11.configure(activebackground="#d9d9d9")
        self.Radiobutton1_11.configure(anchor='nw')
        self.Radiobutton1_11.configure(justify='left')
        self.Radiobutton1_11.configure(text='''smack''')
        self.Radiobutton1_11.configure(value="4")
        self.Radiobutton1_11.configure(variable=cseqGui_support.rb_bd_md_chk)

        self.Radiobutton1_12 = tk.Radiobutton(self.Labelframe5)
        self.Radiobutton1_12.place(relx=0.037, rely=0.686, relheight=0.131, relwidth=0.444, bordermode='ignore')
        self.Radiobutton1_12.configure(activebackground="#d9d9d9")
        self.Radiobutton1_12.configure(anchor='nw')
        self.Radiobutton1_12.configure(justify='left')
        self.Radiobutton1_12.configure(text='''cpa Checker''')
        self.Radiobutton1_12.configure(value="5")
        self.Radiobutton1_12.configure(variable=cseqGui_support.rb_bd_md_chk)

        self.Radiobutton1_13 = tk.Radiobutton(self.Labelframe5)
        self.Radiobutton1_13.place(relx=0.444, rely=0.686, relheight=0.131, relwidth=0.296, bordermode='ignore')
        self.Radiobutton1_13.configure(activebackground="#d9d9d9")
        self.Radiobutton1_13.configure(anchor='nw')
        self.Radiobutton1_13.configure(justify='left')
        self.Radiobutton1_13.configure(text='''satabs''')
        self.Radiobutton1_13.configure(value="6")
        self.Radiobutton1_13.configure(variable=cseqGui_support.rb_bd_md_chk)

        self.Radiobutton1_14 = tk.Radiobutton(self.Labelframe5)
        self.Radiobutton1_14.place(relx=0.444, rely=0.8, relheight=0.131, relwidth=0.407, bordermode='ignore')
        self.Radiobutton1_14.configure(activebackground="#d9d9d9")
        self.Radiobutton1_14.configure(anchor='nw')
        self.Radiobutton1_14.configure(justify='left')
        self.Radiobutton1_14.configure(text='''uautomizer''')
        self.Radiobutton1_14.configure(value="8")
        self.Radiobutton1_14.configure(variable=cseqGui_support.rb_bd_md_chk)

        self.Radiobutton1_15 = tk.Radiobutton(self.Labelframe5)
        self.Radiobutton1_15.place(relx=0.037, rely=0.8, relheight=0.131, relwidth=0.333, bordermode='ignore')
        self.Radiobutton1_15.configure(activebackground="#d9d9d9")
        self.Radiobutton1_15.configure(anchor='nw')
        self.Radiobutton1_15.configure(justify='left')
        self.Radiobutton1_15.configure(text='''framac''')
        self.Radiobutton1_15.configure(value="7")
        self.Radiobutton1_15.configure(variable=cseqGui_support.rb_bd_md_chk)

        self.Label4 = tk.Label(self.Labelframe5)
        self.Label4.place(relx=0.037, rely=0.171, height=21, width=173, bordermode='ignore')
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(anchor='nw')
        self.Label4.configure(text='''Bounded model-checkers:''')

        self.Label4_16 = tk.Label(self.Labelframe5)
        self.Label4_16.place(relx=0.037, rely=0.571, height=21, width=169, bordermode='ignore')
        self.Label4_16.configure(activebackground="#f9f9f9")
        self.Label4_16.configure(anchor='nw')
        self.Label4_16.configure(text='''Abstraction-based:''')

        self.Labelframe6 = tk.LabelFrame(top)
        self.Labelframe6.place(relx=0.016, rely=0.699, relwidth=0.422)
        self.Labelframe6.configure(relief='groove')
        self.Labelframe6.configure(text='''CBMC''')
        self.Labelframe6.configure(height=120)

        self.Checkbutton3 = tk.Checkbutton(self.Labelframe6)
        self.Checkbutton3.place(relx=0.037, rely=0.171, relheight=0.151, relwidth=0.381, bordermode='ignore')
        self.Checkbutton3.configure(activebackground="#d9d9d9")
        self.Checkbutton3.configure(anchor='nw')
        self.Checkbutton3.configure(justify='left')
        self.Checkbutton3.configure(text='''No Simplify''')
        self.Checkbutton3.configure(variable=cseqGui_support.cb_no_simpl)

        self.Checkbutton3_17 = tk.Checkbutton(self.Labelframe6)
        self.Checkbutton3_17.place(relx=0.444, rely=0.171, relheight=0.151, relwidth=0.456, bordermode='ignore')
        self.Checkbutton3_17.configure(activebackground="#d9d9d9")
        self.Checkbutton3_17.configure(anchor='nw')
        self.Checkbutton3_17.configure(justify='left')
        self.Checkbutton3_17.configure(text='''Refine Arrays''')
        self.Checkbutton3_17.configure(variable=cseqGui_support.cb_ref_arr)

        self.Label5 = tk.Label(self.Labelframe6)
        self.Label5.place(relx=0.074, rely=0.54, height=21, width=96, bordermode='ignore')
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(text='''Path backend:''')

        self.Entry3 = tk.Entry(self.Labelframe6)
        self.Entry3.place(relx=0.444, rely=0.54, height=23, relwidth=0.43, bordermode='ignore')
        self.Entry3.configure(background="white")
        self.Entry3.configure(font="TkFixedFont")
        self.Entry3.configure(selectbackground="#c4c4c4")

        self.Labelframe7 = tk.LabelFrame(top)
        self.Labelframe7.place(relx=0.445, rely=0.462, relheight=0.231, relwidth=0.516)
        self.Labelframe7.configure(relief='groove')
        self.Labelframe7.configure(text='''Unwind/Rounds''')
        self.Labelframe7.configure(width=330)

        self.Spinbox1 = tk.Spinbox(self.Labelframe7, from_=0.0, to=100.0)
        self.Spinbox1.place(relx=0.788, rely=0.286, relheight=0.114, relwidth=0.152, bordermode='ignore')
        self.Spinbox1.configure(activebackground="#f9f9f9")
        self.Spinbox1.configure(background="white")
        self.Spinbox1.configure(highlightbackground="black")
        self.Spinbox1.configure(selectbackground="#c4c4c4")
        self.Spinbox1.configure(textvariable=cseqGui_support.sb_unwind)

        self.Label6 = tk.Label(self.Labelframe7)
        self.Label6.place(relx=0.045, rely=0.286, height=21, width=53, bordermode='ignore')
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(anchor='nw')
        self.Label6.configure(text='''Unwind''')

        self.Label6_10 = tk.Label(self.Labelframe7)
        self.Label6_10.place(relx=0.045, rely=0.629, height=21, width=93, bordermode='ignore')
        self.Label6_10.configure(activebackground="#f9f9f9")
        self.Label6_10.configure(anchor='nw')
        self.Label6_10.configure(text='''Unwind-while''')

        self.Label6_11 = tk.Label(self.Labelframe7)
        self.Label6_11.place(relx=0.045, rely=0.4, height=21, width=93, bordermode='ignore')
        self.Label6_11.configure(activebackground="#f9f9f9")
        self.Label6_11.configure(anchor='nw')
        self.Label6_11.configure(text='''Unwind-for''')

        self.Label6_9 = tk.Label(self.Labelframe7)
        self.Label6_9.place(relx=0.045, rely=0.514, height=21, width=113, bordermode='ignore')
        self.Label6_9.configure(activebackground="#f9f9f9")
        self.Label6_9.configure(anchor='nw')
        self.Label6_9.configure(text='''Unwind-for-max''')

        self.Spinbox1_12 = tk.Spinbox(self.Labelframe7, from_=0.0, to=100.0)
        self.Spinbox1_12.place(relx=0.788, rely=0.629, relheight=0.114, relwidth=0.152, bordermode='ignore')
        self.Spinbox1_12.configure(activebackground="#f9f9f9")
        self.Spinbox1_12.configure(background="white")
        self.Spinbox1_12.configure(highlightbackground="black")
        self.Spinbox1_12.configure(selectbackground="#c4c4c4")
        self.Spinbox1_12.configure(textvariable=cseqGui_support.sb_unwind_while)

        self.Spinbox1_13 = tk.Spinbox(self.Labelframe7, from_=0.0, to=100.0)
        self.Spinbox1_13.place(relx=0.788, rely=0.4, relheight=0.114, relwidth=0.152, bordermode='ignore')
        self.Spinbox1_13.configure(activebackground="#f9f9f9")
        self.Spinbox1_13.configure(background="white")
        self.Spinbox1_13.configure(highlightbackground="black")
        self.Spinbox1_13.configure(selectbackground="#c4c4c4")
        self.Spinbox1_13.configure(textvariable=cseqGui_support.sb_unwind_for)

        self.Spinbox1_14 = tk.Spinbox(self.Labelframe7, from_=0.0, to=100.0)
        self.Spinbox1_14.place(relx=0.788, rely=0.514, relheight=0.114, relwidth=0.152, bordermode='ignore')
        self.Spinbox1_14.configure(activebackground="#f9f9f9")
        self.Spinbox1_14.configure(background="white")
        self.Spinbox1_14.configure(highlightbackground="black")
        self.Spinbox1_14.configure(selectbackground="#c4c4c4")
        self.Spinbox1_14.configure(textvariable=cseqGui_support.sb_unwind_for_max)

        self.Spinbox1_15 = tk.Spinbox(self.Labelframe7, from_=0.0, to=100.0)
        self.Spinbox1_15.place(relx=0.788, rely=0.8, relheight=0.114, relwidth=0.152, bordermode='ignore')
        self.Spinbox1_15.configure(activebackground="#f9f9f9")
        self.Spinbox1_15.configure(background="white")
        self.Spinbox1_15.configure(highlightbackground="black")
        self.Spinbox1_15.configure(selectbackground="#c4c4c4")
        self.Spinbox1_15.configure(textvariable=cseqGui_support.sb_rounds)

        self.Label6_12 = tk.Label(self.Labelframe7)
        self.Label6_12.place(relx=0.576, rely=0.8, height=21, width=63, bordermode='ignore')
        self.Label6_12.configure(activebackground="#f9f9f9")
        self.Label6_12.configure(anchor='nw')
        self.Label6_12.configure(text='''Rounds''')
        self.Label6_12.configure(width=63)

        self.Checkbutton4 = tk.Checkbutton(self.Labelframe7)
        self.Checkbutton4.place(relx=0.03, rely=0.114, relheight=0.131, relwidth=0.448, bordermode='ignore')
        self.Checkbutton4.configure(activebackground="#d9d9d9")
        self.Checkbutton4.configure(anchor='nw')
        self.Checkbutton4.configure(justify='left')
        self.Checkbutton4.configure(text='''Soft unwind bound''')
        self.Checkbutton4.configure(variable=cseqGui_support.cb_sof_unwind)

        self.Checkbutton4_13 = tk.Checkbutton(self.Labelframe7)
        self.Checkbutton4_13.place(relx=0.03, rely=0.8, relheight=0.131, relwidth=0.448, bordermode='ignore')
        self.Checkbutton4_13.configure(activebackground="#d9d9d9")
        self.Checkbutton4_13.configure(anchor='nw')
        self.Checkbutton4_13.configure(justify='left')
        self.Checkbutton4_13.configure(text='''Use Round Robin''')
        self.Checkbutton4_13.configure(variable=cseqGui_support.cb_robin)

        self.Labelframe8 = tk.LabelFrame(top)
        self.Labelframe8.place(relx=0.445, rely=0.699, relheight=0.231, relwidth=0.516)
        self.Labelframe8.configure(relief='groove')
        self.Labelframe8.configure(text='''Other''')
        self.Labelframe8.configure(width=330)

        self.Checkbutton5 = tk.Checkbutton(self.Labelframe8)
        self.Checkbutton5.place(relx=0.03, rely=0.171, relheight=0.131, relwidth=0.536, bordermode='ignore')
        self.Checkbutton5.configure(activebackground="#d9d9d9")
        self.Checkbutton5.configure(justify='left')
        self.Checkbutton5.configure(text='''No chek visible pointer''')
        self.Checkbutton5.configure(variable=cseqGui_support.cb_no_chek_var_pointer)

        self.Label7 = tk.Label(self.Labelframe8)
        self.Label7.place(relx=0.045, rely=0.343, height=21, width=73, bordermode='ignore')
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(anchor='nw')
        self.Label7.configure(text='''Time (sec)''')

        self.Label8 = tk.Label(self.Labelframe8)
        self.Label8.place(relx=0.091, rely=0.8, height=21, width=66, bordermode='ignore')
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(text='''Path llvm''')

        self.Spinbox2 = tk.Spinbox(self.Labelframe8, from_=0.0, to=100.0)
        self.Spinbox2.place(relx=0.697, rely=0.343, relheight=0.114, relwidth=0.242, bordermode='ignore')
        self.Spinbox2.configure(activebackground="#f9f9f9")
        self.Spinbox2.configure(background="white")
        self.Spinbox2.configure(highlightbackground="black")
        self.Spinbox2.configure(selectbackground="#c4c4c4")
        self.Spinbox2.configure(textvariable=cseqGui_support.sb_Time)
        self.Spinbox2.configure(width=80)

        self.Entry4 = tk.Entry(self.Labelframe8)
        self.Entry4.place(relx=0.333, rely=0.8, height=23, relwidth=0.594, bordermode='ignore')
        self.Entry4.configure(background="white")
        self.Entry4.configure(font="TkFixedFont")
        self.Entry4.configure(selectbackground="#c4c4c4")

        self.Label7_15 = tk.Label(self.Labelframe8)
        self.Label7_15.place(relx=0.045, rely=0.457, height=21, width=229, bordermode='ignore')
        self.Label7_15.configure(activebackground="#f9f9f9")
        self.Label7_15.configure(anchor='nw')
        self.Label7_15.configure(text='''Limit search depth''')

        self.Spinbox2_16 = tk.Spinbox(self.Labelframe8, from_=0.0, to=100.0)
        self.Spinbox2_16.place(relx=0.788, rely=0.457, relheight=0.114, relwidth=0.152, bordermode='ignore')
        self.Spinbox2_16.configure(activebackground="#f9f9f9")
        self.Spinbox2_16.configure(background="white")
        self.Spinbox2_16.configure(highlightbackground="black")
        self.Spinbox2_16.configure(selectbackground="#c4c4c4")
        self.Spinbox2_16.configure(textvariable=cseqGui_support.sb_lim_ser_depth)

        self.Label7_16 = tk.Label(self.Labelframe8)
        self.Label7_16.place(relx=0.045, rely=0.571, height=21, width=139, bordermode='ignore')
        self.Label7_16.configure(activebackground="#f9f9f9")
        self.Label7_16.configure(anchor='nw')
        self.Label7_16.configure(text='''Semantic level''')

        self.Spinbox2_17 = tk.Spinbox(self.Labelframe8, from_=0.0, to=100.0)
        self.Spinbox2_17.place(relx=0.788, rely=0.571, relheight=0.114, relwidth=0.152, bordermode='ignore')
        self.Spinbox2_17.configure(activebackground="#f9f9f9")
        self.Spinbox2_17.configure(background="white")
        self.Spinbox2_17.configure(highlightbackground="black")
        self.Spinbox2_17.configure(selectbackground="#c4c4c4")
        self.Spinbox2_17.configure(textvariable=cseqGui_support.sb_sem_lev)

        self.Button2 = tk.Button(top)
        self.Button2.place(relx=0.453, rely=0.943, height=29, width=331)
        self.Button2.configure(activebackground="#d9d9d9")
        self.Button2.configure(text='''Run''')

        self.Labelframe_res = tk.LabelFrame(top)
        self.Labelframe_res.place(relx=0.016, rely=0.87, height=83, relwidth=0.422)
        self.Labelframe_res.configure(relief='groove')
        self.Labelframe_res.configure(text='''Result''')
        self.Labelframe_res.configure(width=270)

        self.Labe_res = tk.Label(self.Labelframe_res)
        # self.Labe_res.place(relx=0.037, rely=0.24, height=21, width=130, bordermode = 'ignore')
        self.Labe_res.configure(justify=tk.LEFT, activebackground="#f9f9f9")
        # self.Labe_res.configure(text='''VERIFICATION FAILED\nexamples/peterson.c, [91mUNSAFE[0m, 1.96, 37.90MB, PRE:0.44''')
        self.Labe_res.grid(row=0,column=0)

        self.Labelframe9 = tk.LabelFrame(top)
        self.Labelframe9.place(relx=0.016, rely=0.013, relheight=0.165, relwidth=0.422)
        self.Labelframe9.configure(relief='groove')
        self.Labelframe9.configure(text='''Input''')
        self.Labelframe9.configure(width=270)

        self.Label9 = tk.Label(self.Labelframe9)
        self.Label9.place(relx=0.037, rely=0.24, height=21, width=130, bordermode='ignore')
        self.Label9.configure(activebackground="#f9f9f9")
        self.Label9.configure(text='''Path source file (.c)''')

        self.Text2 = tk.Entry(self.Labelframe9)
        self.Text2.place(relx=0.037, rely=0.4, relheight=0.192, relwidth=0.911, bordermode='ignore')
        self.Text2.configure(background="white")
        self.Text2.configure(font="TkTextFont")
        self.Text2.configure(selectbackground="#c4c4c4")
        self.Text2.configure(width=246)

        self.Button1 = tk.Button(self.Labelframe9)
        self.Button1.place(relx=0.685, rely=0.64, height=29, width=69, bordermode='ignore')
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(text='''Browse''')
